// NCI Gadi nf-core configuration profile

// TODO Test adding trace reports for SU calculation 
// TODO SU calculation afterScript to support benchmarking? 

profiles {
    gadi {
    
        // Profile config names for nf-core/configs
        params {
            config_profile_description = 'NCI Gadi HPC profile provided by nf-core/configs'
            config_profile_contact = 'Georgie Samaha (@georgiesamaha)'
            config_profile_url = 'https://opus.nci.org.au/display/Help/Gadi+User+Guide'
        }

        // Set environmental variables for Gadi
        env { 
            NXF_OPTS='-Xms4g -Xmx1g'
        }

        // Write custom trace file with outputs required for SU calculation
        def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
        trace {
            enabled = true
            overwrite = false 
            file = "./gadi-nf-core-trace-${trace_timestamp}.txt"
            fields = 'name,status,exit,duration,realtime,cpus,%cpu,memory,%mem,rss'
        } 

        // Enable use of Singularity to run containers 
        singularity {
            enabled = true
            autoMounts = true
        }

        // Submit up to 1000 concurrent jobs (Gadi max) at 15 sec intervals to avoid spamming the cluster
        executor {
            queueSize = 1000
            pollInterval = '15 sec'
        }

        // Define process resource limits 
        process {
            executor = 'pbspro'
            project = "$PROJECT"
            storage = "scratch/$PROJECT"
            queue = { task.memory < 128.GB ? 'normalbw' : (task.memory >= 128.GB && task.memory <= 190.GB ? 'normal' : (task.memory > 190.GB && task.memory <= 1020.GB ? 'hugemembw' : '')) }
            beforeScript = 'module load singularity nextflow'
        }
    }
}